{"version":3,"sources":["../src/Image.tsx"],"names":["Image","React","PureComponent","image","createRef","getClasses","selected","props","renderInner","src","getSrc","data","node","get","getSize","size","width","height","renderReadonly","attributes","renderResizer","editor","e","direction","ref","d","current","setNodeByKey","key","renderLoading","render","readOnly"],"mappings":"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","sourcesContent":["import React from 'react'\nimport classNames from \"classnames\"\nimport { Resizable } from \"re-resizable\";\n\n/**\n * Image node renderer.\n *\n * @type {Component}\n */\n\nclass Image extends React.PureComponent<any, any> {\n  private image = React.createRef<HTMLImageElement>()\n\n  getClasses() {\n    const { selected } = this.props\n\n    return classNames(\"editor__content-image\", {\n      \"editor__content-image--focused\": selected\n    })\n  }\n\n  renderInner() {\n    const src = this.getSrc()\n    return (\n      <a href={src} target=\"_blank\">\n        <img alt=\"\" src={src} ref={this.image} />\n      </a>\n    )\n  }\n\n  getSrc() {\n    const { data } = this.props.node\n    const src = data.get(\"src\")\n    return src\n  }\n\n  getSize() {\n    const { data } = this.props.node\n    const size = {\n      width: data.get(\"width\"),\n      height: data.get(\"height\")\n    }\n    return size\n  }\n\n  renderReadonly() {\n    const { attributes } = this.props\n    const size = this.getSize()\n\n    return (\n      <span\n        className={this.getClasses()}\n        {...attributes}\n        style={{\n          width: size.width + \"px\",\n          height: size.height + \"px\",\n        }}\n      >\n        {this.renderInner()}\n      </span>\n    )\n  }\n\n  renderResizer() {\n    const { attributes } = this.props\n    const { editor, node } = this.props\n\n    const size = this.getSize()\n    const src = this.getSrc()\n    return (\n      <Resizable\n        className={this.getClasses()}\n        size={size}\n        onResizeStop={(e, direction, ref, d) => {\n          if (this.image.current) {\n            const width = this.image.current.width\n            const height = this.image.current.height\n            editor.setNodeByKey(node.key, {\n              data: {\n                src,\n                width,\n                height\n              },\n            })\n          }\n        }}\n        {...attributes}\n      >\n        {this.renderInner()}\n      </Resizable>\n    )\n  }\n\n  renderLoading() {\n    const { attributes } = this.props\n\n    return (\n      <span\n        className={this.getClasses()}\n        {...attributes}\n      >\n        Loading...\n      </span>\n    )\n  }\n\n  render() {\n    const { selected, editor } = this.props\n    const { data } = this.props.node\n    const src = data.get(\"src\")\n    if (!src) {\n      return this.renderLoading()\n    }\n    if (editor.props.readOnly) {\n      return this.renderReadonly()\n    }\n    return this.renderResizer()\n  }\n}\n\nexport default Image\n"],"file":"Image.js"}