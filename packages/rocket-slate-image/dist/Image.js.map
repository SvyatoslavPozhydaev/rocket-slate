{"version":3,"sources":["../src/Image.tsx"],"names":["Image","React","PureComponent","getClasses","selected","props","renderInner","src","getSrc","r","image","data","node","get","getSize","size","width","height","renderReadonly","attributes","renderResizer","editor","e","direction","ref","d","setNodeByKey","key","renderLoading","render","readOnly"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;AAQA,MAAMA,KAAN,SAAoBC,eAAMC,aAA1B,CAAwC;AACtCC,EAAAA,UAAU,GAAG;AACX,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AAEA,WAAO,yBAAW,uBAAX,EAAoC;AACzC,wCAAkCD;AADO,KAApC,CAAP;AAGD;;AAEDE,EAAAA,WAAW,GAAG;AACZ,UAAMC,GAAG,GAAG,KAAKC,MAAL,EAAZ;AACA,WACE;AAAG,MAAA,IAAI,EAAED,GAAT;AAAc,MAAA,MAAM,EAAC;AAArB,OACE;AAAK,MAAA,GAAG,EAAC,EAAT;AAAY,MAAA,GAAG,EAAEA,GAAjB;AAAsB,MAAA,GAAG,EAAGE,CAAD,IAAO,KAAKC,KAAL,GAAaD;AAA/C,MADF,CADF;AAKD;;AAEDD,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEG,MAAAA;AAAF,QAAW,KAAKN,KAAL,CAAWO,IAA5B;AACA,UAAML,GAAG,GAAGI,IAAI,CAACE,GAAL,CAAS,KAAT,CAAZ;AACA,WAAON,GAAP;AACD;;AAEDO,EAAAA,OAAO,GAAG;AACR,UAAM;AAAEH,MAAAA;AAAF,QAAW,KAAKN,KAAL,CAAWO,IAA5B;AACA,UAAMG,IAAI,GAAG;AACXC,MAAAA,KAAK,EAAEL,IAAI,CAACE,GAAL,CAAS,OAAT,CADI;AAEXI,MAAAA,MAAM,EAAEN,IAAI,CAACE,GAAL,CAAS,QAAT;AAFG,KAAb;AAIA,WAAOE,IAAP;AACD;;AAEDG,EAAAA,cAAc,GAAG;AACf,UAAM;AAAEC,MAAAA;AAAF,QAAiB,KAAKd,KAA5B;AACA,UAAMU,IAAI,GAAG,KAAKD,OAAL,EAAb;AAEA,WACE;AACE,MAAA,SAAS,EAAE,KAAKX,UAAL;AADb,OAEMgB,UAFN;AAGE,MAAA,KAAK,EAAE;AACLH,QAAAA,KAAK,EAAED,IAAI,CAACC,KAAL,GAAa,IADf;AAELC,QAAAA,MAAM,EAAEF,IAAI,CAACE,MAAL,GAAc;AAFjB;AAHT,QAQG,KAAKX,WAAL,EARH,CADF;AAYD;;AAEDc,EAAAA,aAAa,GAAG;AACd,UAAM;AAAED,MAAAA;AAAF,QAAiB,KAAKd,KAA5B;AACA,UAAM;AAAEgB,MAAAA,MAAF;AAAUT,MAAAA;AAAV,QAAmB,KAAKP,KAA9B;AAEA,UAAMU,IAAI,GAAG,KAAKD,OAAL,EAAb;AACA,UAAMP,GAAG,GAAG,KAAKC,MAAL,EAAZ;AACA,WACE,6BAAC,sBAAD;AACE,MAAA,SAAS,EAAE,KAAKL,UAAL,EADb;AAEE,MAAA,IAAI,EAAEY,IAFR;AAGE,MAAA,YAAY,EAAE,CAACO,CAAD,EAAIC,SAAJ,EAAeC,GAAf,EAAoBC,CAApB,KAA0B;AACtC,cAAMT,KAAK,GAAG,KAAKN,KAAL,CAAWM,KAAzB;AACA,cAAMC,MAAM,GAAG,KAAKP,KAAL,CAAWO,MAA1B;AACAI,QAAAA,MAAM,CAACK,YAAP,CAAoBd,IAAI,CAACe,GAAzB,EAA8B;AAC5BhB,UAAAA,IAAI,EAAE;AACJJ,YAAAA,GADI;AAEJS,YAAAA,KAFI;AAGJC,YAAAA;AAHI;AADsB,SAA9B;AAOD;AAbH,OAcME,UAdN,GAgBG,KAAKb,WAAL,EAhBH,CADF;AAoBD;;AAEDsB,EAAAA,aAAa,GAAG;AACd,UAAM;AAAET,MAAAA;AAAF,QAAiB,KAAKd,KAA5B;AAEA,WACE;AACE,MAAA,SAAS,EAAE,KAAKF,UAAL;AADb,OAEMgB,UAFN,gBADF;AAQD;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEzB,MAAAA,QAAF;AAAYiB,MAAAA;AAAZ,QAAuB,KAAKhB,KAAlC;AACA,UAAM;AAAEM,MAAAA;AAAF,QAAW,KAAKN,KAAL,CAAWO,IAA5B;AACA,UAAML,GAAG,GAAGI,IAAI,CAACE,GAAL,CAAS,KAAT,CAAZ;;AACA,QAAI,CAACN,GAAL,EAAU;AACR,aAAO,KAAKqB,aAAL,EAAP;AACD;;AACD,QAAIP,MAAM,CAAChB,KAAP,CAAayB,QAAjB,EAA2B;AACzB,aAAO,KAAKZ,cAAL,EAAP;AACD;;AACD,WAAO,KAAKE,aAAL,EAAP;AACD;;AAvGqC;;eA0GzBpB,K","sourcesContent":["import React from 'react'\nimport classNames from \"classnames\"\nimport { Resizable } from \"re-resizable\";\n\n/**\n * Image node renderer.\n *\n * @type {Component}\n */\n\nclass Image extends React.PureComponent {\n  getClasses() {\n    const { selected } = this.props\n\n    return classNames(\"editor__content-image\", {\n      \"editor__content-image--focused\": selected\n    })\n  }\n\n  renderInner() {\n    const src = this.getSrc()\n    return (\n      <a href={src} target=\"_blank\">\n        <img alt=\"\" src={src} ref={(r) => this.image = r} />\n      </a>\n    )\n  }\n\n  getSrc() {\n    const { data } = this.props.node\n    const src = data.get(\"src\")\n    return src\n  }\n\n  getSize() {\n    const { data } = this.props.node\n    const size = {\n      width: data.get(\"width\"),\n      height: data.get(\"height\")\n    }\n    return size\n  }\n\n  renderReadonly() {\n    const { attributes } = this.props\n    const size = this.getSize()\n\n    return (\n      <span\n        className={this.getClasses()}\n        {...attributes}\n        style={{\n          width: size.width + \"px\",\n          height: size.height + \"px\",\n        }}\n      >\n        {this.renderInner()}\n      </span>\n    )\n  }\n\n  renderResizer() {\n    const { attributes } = this.props\n    const { editor, node } = this.props\n\n    const size = this.getSize()\n    const src = this.getSrc()\n    return (\n      <Resizable\n        className={this.getClasses()}\n        size={size}\n        onResizeStop={(e, direction, ref, d) => {\n          const width = this.image.width\n          const height = this.image.height\n          editor.setNodeByKey(node.key, {\n            data: {\n              src,\n              width,\n              height\n            },\n          })\n        }}\n        {...attributes}\n      >\n        {this.renderInner()}\n      </Resizable>\n    )\n  }\n\n  renderLoading() {\n    const { attributes } = this.props\n\n    return (\n      <span\n        className={this.getClasses()}\n        {...attributes}\n      >\n        Loading...\n      </span>\n    )\n  }\n\n  render() {\n    const { selected, editor } = this.props\n    const { data } = this.props.node\n    const src = data.get(\"src\")\n    if (!src) {\n      return this.renderLoading()\n    }\n    if (editor.props.readOnly) {\n      return this.renderReadonly()\n    }\n    return this.renderResizer()\n  }\n}\n\nexport default Image\n"],"file":"Image.js"}