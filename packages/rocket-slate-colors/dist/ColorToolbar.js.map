{"version":3,"sources":["../src/ColorToolbar.tsx"],"names":["Default","fg","bg","Names","Icons","faPalette","faFill","Other","ColorToolbar","React","PureComponent","constructor","props","state","toggle","kind","toSet","setState","has","removed","remove","value","editorState","marks","some","mark","type","editor","selection","isExpanded","filter","forEach","removeMark","setColor","color","addMark","data","focus","renderColor","cl","colors","map","backgroundColor","render"],"mappings":";;;;;;;AAAA;;AACA;;AAGA;;AAEA;;AAEA;;AACA;;AACA;;;;AAEA,MAAMA,OAAO,GAAG;AAACC,EAAAA,EAAE,EAAE,SAAL;AAAgBC,EAAAA,EAAE,EAAE;AAApB,CAAhB;AACA,MAAMC,KAAK,GAAG;AAACF,EAAAA,EAAE,EAAE,aAAL;AAAoBC,EAAAA,EAAE,EAAE;AAAxB,CAAd;AACA,MAAME,KAAK,GAAG;AAACH,EAAAA,EAAE,EAAEI,oBAAL;AAAgBH,EAAAA,EAAE,EAAEI;AAApB,CAAd;AACA,MAAMC,KAAK,GAAG;AAACN,EAAAA,EAAE,EAAE,IAAL;AAAWC,EAAAA,EAAE,EAAE;AAAf,CAAd;;AAEA,MAAMM,YAAN,SAA2BC,eAAMC,aAAjC,CAA+C;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXZ,MAAAA,EAAE,EAAE,KADO;AAEXC,MAAAA,EAAE,EAAE;AAFO,KAAb;AAID;;AAGDY,EAAAA,MAAM,CAACC,IAAD,EAAO;AACX,QAAIC,KAAK,GAAG,EAAZ;;AACA,QAAI,KAAKH,KAAL,CAAWE,IAAX,CAAJ,EAAsB;AACpBC,MAAAA,KAAK,CAACD,IAAD,CAAL,GAAc,KAAd;AACA,WAAKE,QAAL,CAAcD,KAAd;AACA;AACD;;AAED,QAAI,KAAKE,GAAL,CAASH,IAAT,CAAJ,EAAoB;AAClB,UAAII,OAAO,GAAG,KAAKC,MAAL,CAAYL,IAAZ,CAAd;;AACA,UAAII,OAAJ,EAAa;AACXH,QAAAA,KAAK,CAACD,IAAD,CAAL,GAAc,KAAd;AACD,OAFD,MAEO;AACLC,QAAAA,KAAK,CAACD,IAAD,CAAL,GAAc,IAAd;AACD;AACF,KAPD,MAOO;AACLC,MAAAA,KAAK,CAACD,IAAD,CAAL,GAAc,CAAC,KAAKF,KAAL,CAAWE,IAAX,CAAf;AACD;;AAED,QAAIC,KAAK,CAACD,IAAD,CAAT,EAAiB;AACfC,MAAAA,KAAK,CAACT,KAAK,CAACQ,IAAD,CAAN,CAAL,GAAqB,KAArB;AACD;;AAED,SAAKE,QAAL,CAAcD,KAAd;AACD;;AAEDE,EAAAA,GAAG,CAACH,IAAD,EAAO;AACR,UAAM;AAACM,MAAAA;AAAD,QAAU,KAAKT,KAAL,CAAWU,WAA3B;AACA,WAAOD,KAAK,CAACE,KAAN,CAAYC,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAcX,IAAI,GAAG,QAA9C,CAAP;AACD;;AAEDK,EAAAA,MAAM,CAACL,IAAD,EAAO;AACX,UAAM;AAAEY,MAAAA,MAAF;AAAUL,MAAAA,WAAW,EAAE;AAACD,QAAAA;AAAD;AAAvB,QAAmC,KAAKT,KAA9C;AACA,UAAM;AAAEgB,MAAAA;AAAF,QAAgBP,KAAtB;;AAGA,QAAI,KAAKH,GAAL,CAASH,IAAT,KAAkBa,SAAS,CAACC,UAAhC,EAA4C;AAC1C,UAAIV,OAAO,GAAG,KAAd;AACAE,MAAAA,KAAK,CAACE,KAAN,CAAYO,MAAZ,CAAmBL,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAcX,IAAI,GAAG,QAAhD,EAA0DgB,OAA1D,CAAkEN,IAAI,IAAI;AACxEE,QAAAA,MAAM,CAACK,UAAP,CAAkBP,IAAlB;AACAN,QAAAA,OAAO,GAAG,IAAV;AACD,OAHD;AAIA,aAAOA,OAAP;AACD;;AACD,WAAO,KAAP;AACD;;AAEDc,EAAAA,QAAQ,CAAClB,IAAD,EAAOmB,KAAP,EAAc;AACpB,UAAM;AAAEP,MAAAA,MAAF;AAAUL,MAAAA,WAAW,EAAE;AAACD,QAAAA;AAAD;AAAvB,QAAmC,KAAKT,KAA9C;AAEA,SAAKQ,MAAL,CAAYL,IAAZ;;AAEA,QAAImB,KAAK,KAAKlC,OAAO,CAACe,IAAD,CAArB,EAA6B;AAC3BY,MAAAA,MAAM,CAACQ,OAAP,CAAe;AAAET,QAAAA,IAAI,EAAEX,IAAI,GAAG,QAAf;AAAyBqB,QAAAA,IAAI,EAAE;AAAEF,UAAAA;AAAF;AAA/B,OAAf,EAA2DG,KAA3D;AACD;;AAED,QAAIrB,KAAK,GAAG,EAAZ;AACAA,IAAAA,KAAK,CAACD,IAAD,CAAL,GAAc,KAAd;AACA,SAAKE,QAAL,CAAcD,KAAd;AACD;;AAEDsB,EAAAA,WAAW,CAACvB,IAAD,EAAO;AAChB,UAAMwB,EAAE,GAAG,yBAAW,gBAAX,EAA6B;AACtC,gCAA0B,KAAKrB,GAAL,CAASH,IAAT;AADY,KAA7B,CAAX;AAIA,WACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,6BAAC,eAAD;AAAO,MAAA,OAAO,EAAEZ,KAAK,CAACY,IAAD;AAArB,OACE;AAAG,MAAA,SAAS,EAAEwB,EAAd;AACE,MAAA,OAAO,EAAE,MAAM,KAAKzB,MAAL,CAAYC,IAAZ;AADjB,OAGE,6BAAC,iCAAD;AAAiB,MAAA,IAAI,EAAEX,KAAK,CAACW,IAAD;AAA5B,MAHF,CADF,CADF,EAQG,KAAKF,KAAL,CAAWE,IAAX,IACC;AAAK,MAAA,SAAS,EAAC;AAAf,OACGyB,gBAAOC,GAAP,CAAaP,KAAD,IAAW;AACtB,aACE;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,SAAS,EAAC,eAFZ;AAGE,QAAA,KAAK,EAAE;AAACQ,UAAAA,eAAe,EAAER;AAAlB,SAHT;AAIE,QAAA,OAAO,EAAE,MAAM,KAAKD,QAAL,CAAclB,IAAd,EAAoBmB,KAApB;AAJjB,QADF;AAQD,KATA,CADH,CADD,GAaG,IArBN,CADF;AAyBD;;AAEDS,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,GAAG,EAAC,MAAT;AAAgB,MAAA,SAAS,EAAC;AAA1B,OACG,KAAKL,WAAL,CAAiB,IAAjB,CADH,EAEG,KAAKA,WAAL,CAAiB,IAAjB,CAFH,CADF;AAMD;;AA9G4C;;eAiHhC9B,Y","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\n\nimport Button from \"@rocket-slate/toolbar\";\nimport Tippy from \"@tippy.js/react\";\n\nimport colors from \"./colors\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFill } from \"@fortawesome/free-solid-svg-icons/faFill\";\nimport { faPalette } from \"@fortawesome/free-solid-svg-icons/faPalette\";\n\nconst Default = {fg: \"#000000\", bg: \"#ffffff\"}\nconst Names = {fg: \"Цвет текста\", bg: \"Цвет фона\"}\nconst Icons = {fg: faPalette, bg: faFill}\nconst Other = {fg: 'bg', bg: 'fg'}\n\nclass ColorToolbar extends React.PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      fg: false,\n      bg: false,\n    }\n  }\n  \n\n  toggle(kind) {\n    var toSet = {}\n    if (this.state[kind]) {\n      toSet[kind] = false\n      this.setState(toSet)\n      return\n    }\n\n    if (this.has(kind)) {\n      let removed = this.remove(kind)\n      if (removed) {\n        toSet[kind] = false\n      } else {\n        toSet[kind] = true\n      }\n    } else {\n      toSet[kind] = !this.state[kind]\n    }\n\n    if (toSet[kind]) {\n      toSet[Other[kind]] = false\n    }\n\n    this.setState(toSet)\n  }\n\n  has(kind) {\n    const {value} = this.props.editorState\n    return value.marks.some(mark => mark.type === kind + '_color')\n  }\n\n  remove(kind) {\n    const { editor, editorState: {value} } = this.props\n    const { selection } = value\n    //console.log(\"remove\", kind, selection.isExpanded)\n\n    if (this.has(kind) && selection.isExpanded) {\n      var removed = false\n      value.marks.filter(mark => mark.type === kind + '_color').forEach(mark => {\n        editor.removeMark(mark)\n        removed = true\n      })\n      return removed\n    }\n    return false\n  }\n\n  setColor(kind, color) {\n    const { editor, editorState: {value} } = this.props\n\n    this.remove(kind)\n\n    if (color !== Default[kind]) {\n      editor.addMark({ type: kind + '_color', data: { color } }).focus()\n    }\n\n    var toSet = {}\n    toSet[kind] = false\n    this.setState(toSet)\n  }\n\n  renderColor(kind) {\n    const cl = classNames(\"editor__button\", {\n      \"editor__button--active\": this.has(kind)\n    });\n\n    return (\n      <div className=\"editor__color-group\">\n        <Tippy content={Names[kind]}>\n          <a className={cl}\n            onClick={() => this.toggle(kind)}\n          >\n            <FontAwesomeIcon icon={Icons[kind]} />\n          </a>\n        </Tippy>\n        {this.state[kind] ? (\n          <div className=\"editor__color-dropdown\">\n            {colors.map ((color) => {\n              return (\n                <span\n                  key={color}\n                  className=\"editor__color\"\n                  style={{backgroundColor: color}}\n                  onClick={() => this.setColor(kind, color)}\n                ></span>\n              )\n            })}\n          </div>\n        ) : null}\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div key=\"tbg7\" className=\"editor__toolbar-group\">\n        {this.renderColor('fg')}\n        {this.renderColor('bg')}\n      </div>\n    )\n  }\n}\n\nexport default ColorToolbar;\n"],"file":"ColorToolbar.js"}