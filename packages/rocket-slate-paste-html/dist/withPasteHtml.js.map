{"version":3,"sources":["../src/withPasteHtml.ts"],"names":["withPaseteHtml","editor","insertData","isInline","isVoid","element","type","data","html","getData","parsed","DOMParser","parseFromString","fragment","body","Transforms","insertFragment"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEe,SAASA,cAAT,CAAwBC,MAAxB,EAAgC;AAC7C,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,QAAd;AAAwBC,IAAAA;AAAxB,MAAmCH,MAAzC;;AAEAA,EAAAA,MAAM,CAACE,QAAP,GAAkBE,OAAO,IAAI;AAC3B,WAAOA,OAAO,CAACC,IAAR,KAAiB,MAAjB,GAA0B,IAA1B,GAAiCH,QAAQ,CAACE,OAAD,CAAhD;AACD,GAFD;;AAIAJ,EAAAA,MAAM,CAACG,MAAP,GAAgBC,OAAO,IAAI;AACzB,WAAOA,OAAO,CAACC,IAAR,KAAiB,OAAjB,GAA2B,IAA3B,GAAkCF,MAAM,CAACC,OAAD,CAA/C;AACD,GAFD;;AAIAJ,EAAAA,MAAM,CAACC,UAAP,GAAoBK,IAAI,IAAI;AAC1B,UAAMC,IAAI,GAAGD,IAAI,CAACE,OAAL,CAAa,WAAb,CAAb;;AAEA,QAAID,IAAJ,EAAU;AACR,YAAME,MAAM,GAAG,IAAIC,SAAJ,GAAgBC,eAAhB,CAAgCJ,IAAhC,EAAsC,WAAtC,CAAf;AACA,YAAMK,QAAQ,GAAG,0BAAYH,MAAM,CAACI,IAAnB,CAAjB;;AACAC,wBAAWC,cAAX,CAA0Bf,MAA1B,EAAkCY,QAAlC;;AACA;AACD;;AAEDX,IAAAA,UAAU,CAACK,IAAD,CAAV;AACD,GAXD;;AAaA,SAAON,MAAP;AACD","sourcesContent":["import deserialize from \"./deserialize\";\nimport { Transforms } from 'slate'\n\nexport default function withPaseteHtml(editor) {\n  const { insertData, isInline, isVoid } = editor\n\n  editor.isInline = element => {\n    return element.type === 'link' ? true : isInline(element)\n  }\n\n  editor.isVoid = element => {\n    return element.type === 'image' ? true : isVoid(element)\n  }\n\n  editor.insertData = data => {\n    const html = data.getData('text/html')\n\n    if (html) {\n      const parsed = new DOMParser().parseFromString(html, 'text/html')\n      const fragment = deserialize(parsed.body)\n      Transforms.insertFragment(editor, fragment)\n      return\n    }\n\n    insertData(data)\n  }\n\n  return editor\n}\n"],"file":"withPasteHtml.js"}