{"version":3,"sources":["../src/Editor.tsx"],"names":["Editor","React","PureComponent","constructor","props","state","initialValue","initialEditorState","render","renderElement","renderLeaf","editor","value","setState"],"mappings":";;;;;;;AAIA;;AAEA;;AAEA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;;AAEe,MAAMA,MAAN,SAAqBC,eAAMC,aAA3B,CAAyC;AACtDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAaD,KAAK,CAACE,YAAN,IAAsBC,+BAAnC;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,aAAa,GAAG,wBAAYL,KAAK,IAAI,6BAAC,oBAAD,EAAaA,KAAb,CAArB,EAA6C,EAA7C,CAAtB;AACA,UAAMM,UAAU,GAAG,wBAAYN,KAAK,IAAI,6BAAC,iBAAD,EAAUA,KAAV,CAArB,EAA0C,EAA1C,CAAnB;AAEA,UAAMO,MAAM,GAAG,oBACb,MAAM;AACJ,UAAIA,MAAM,GAAG,+BAAY,0BAAZ,CAAb;AACAA,MAAAA,MAAM,GAAG,2BAAU,8BAAc,0BAAY,sBAAU,4BAAaA,MAAb,CAAV,CAAZ,CAAd,CAAV,CAAT;AACA,aAAOA,MAAP;AACD,KALY,EAMb,EANa,CAAf;AASA,WACE,6BAAC,iBAAD;AAAO,MAAA,MAAM,EAAEA,MAAf;AAAuB,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,KAAzC;AAAgD,MAAA,QAAQ,EAAEA,KAAK,IAAI,KAAKC,QAAL,CAAc;AAACD,QAAAA;AAAD,OAAd;AAAnE,OACE,6BAAC,oBAAD;AACE,MAAA,aAAa,EAAEH,aADjB;AAEE,MAAA,UAAU,EAAEC,UAFd;AAGE,MAAA,WAAW,EAAC;AAHd,MADF,CADF;AASD;;AA5BqD","sourcesContent":["// This is an example with all the plugins enabled \n// It is designed for use as-is\n// Copy this file to your project and customize as necessary if you want\n\nimport React, { useCallback, useMemo } from 'react'\n\nimport { initialEditorState, Element, Leaf } from \"rocket-slate\"\n\nimport { withWysiwyg } from '@rocket-slate/wysiwyg'\nimport { withPasteHtml } from '@rocket-slate/paste-html'\nimport { withMentions } from '@rocket-slate/mentions'\nimport { withLinks } from '@rocket-slate/links'\n\nimport { Editable, withReact, useSlate, Slate } from 'slate-react'\nimport { Transforms, createEditor } from 'slate'\nimport { withHistory } from 'slate-history'\n\nexport default class Editor extends React.PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = props.initialValue || initialEditorState\n  }\n\n  render() {\n    const renderElement = useCallback(props => <Element {...props} />, [])\n    const renderLeaf = useCallback(props => <Leaf {...props} />, [])\n\n    const editor = useMemo(\n      () => {\n        let editor = withHistory(createEditor())\n        editor = withReact(withPasteHtml(withWysiwyg(withLinks(withMentions(editor)))))\n        return editor\n      },\n      []\n    )\n\n    return (\n      <Slate editor={editor} value={this.state.value} onChange={value => this.setState({value})}>\n        <Editable\n          renderElement={renderElement}\n          renderLeaf={renderLeaf}\n          placeholder=\"Paste in some HTML...\"\n        />\n      </Slate>\n    )\n  }\n}\n\n"],"file":"Editor.js"}