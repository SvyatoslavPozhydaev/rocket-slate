{"version":3,"sources":["../src/util.ts"],"names":["HOTKEYS","LIST_TYPES","toggleBlock","editor","format","isActive","isBlockActive","isList","includes","Transforms","unwrapNodes","match","n","type","split","setNodes","block","children","wrapNodes","toggleMark","isMarkActive","Editor","removeMark","addMark","nodes","marks"],"mappings":";;;;;;;AAUA;;AATO,MAAMA,OAAO,GAAG;AACnB,WAAS,MADU;AAEnB,WAAS,QAFU;AAGnB,WAAS,WAHU;AAInB,WAAS;AAJU,CAAhB;;AAOA,MAAMC,UAAU,GAAG,CAAC,eAAD,EAAkB,eAAlB,EAAmC,eAAnC,CAAnB;;;AAIP,MAAMC,WAAW,GAAG,CAACC,MAAD,EAASC,MAAT,KAAoB;AACpC,QAAMC,QAAQ,GAAGC,aAAa,CAACH,MAAD,EAASC,MAAT,CAA9B;AACA,QAAMG,MAAM,GAAGN,UAAU,CAACO,QAAX,CAAoBJ,MAApB,CAAf;;AAEAK,oBAAWC,WAAX,CAAuBP,MAAvB,EAA+B;AAC3BQ,IAAAA,KAAK,EAAEC,CAAC,IAAIX,UAAU,CAACO,QAAX,CAAoBI,CAAC,CAACC,IAAtB,CADe;AAE3BC,IAAAA,KAAK,EAAE;AAFoB,GAA/B;;AAKAL,oBAAWM,QAAX,CAAoBZ,MAApB,EAA4B;AACxBU,IAAAA,IAAI,EAAER,QAAQ,GAAG,WAAH,GAAiBE,MAAM,GAAG,WAAH,GAAiBH;AAD9B,GAA5B;;AAIA,MAAI,CAACC,QAAD,IAAaE,MAAjB,EAAyB;AACrB,UAAMS,KAAK,GAAG;AAAEH,MAAAA,IAAI,EAAET,MAAR;AAAgBa,MAAAA,QAAQ,EAAE;AAA1B,KAAd;;AACAR,sBAAWS,SAAX,CAAqBf,MAArB,EAA6Ba,KAA7B;AACH;AACJ,CAjBD;;;;AAmBA,MAAMG,UAAU,GAAG,CAAChB,MAAD,EAASC,MAAT,KAAoB;AACnC,QAAMC,QAAQ,GAAGe,YAAY,CAACjB,MAAD,EAASC,MAAT,CAA7B;;AAEA,MAAIC,QAAJ,EAAc;AACVgB,kBAAOC,UAAP,CAAkBnB,MAAlB,EAA0BC,MAA1B;AACH,GAFD,MAEO;AACHiB,kBAAOE,OAAP,CAAepB,MAAf,EAAuBC,MAAvB,EAA+B,IAA/B;AACH;AACJ,CARD;;;;AAUA,MAAME,aAAa,GAAG,CAACH,MAAD,EAASC,MAAT,KAAoB;AACtC,QAAM,CAACO,KAAD,IAAUU,cAAOG,KAAP,CAAarB,MAAb,EAAqB;AACjCQ,IAAAA,KAAK,EAAEC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAWT;AADU,GAArB,CAAhB;;AAIA,SAAO,CAAC,CAACO,KAAT;AACH,CAND;;;;AAQA,MAAMS,YAAY,GAAG,CAACjB,MAAD,EAASC,MAAT,KAAoB;AACrC,QAAMqB,KAAK,GAAGJ,cAAOI,KAAP,CAAatB,MAAb,CAAd;;AACA,SAAOsB,KAAK,GAAGA,KAAK,CAACrB,MAAD,CAAL,KAAkB,IAArB,GAA4B,KAAxC;AACH,CAHD","sourcesContent":["\nexport const HOTKEYS = {\n    'mod+b': 'bold',\n    'mod+i': 'italic',\n    'mod+u': 'underline',\n    'mod+`': 'code',\n}\n\nexport const LIST_TYPES = ['numbered-list', 'bulleted-list', 'checkbox-list']\n\nimport { Transforms, Editor } from \"slate\"\n\nconst toggleBlock = (editor, format) => {\n    const isActive = isBlockActive(editor, format)\n    const isList = LIST_TYPES.includes(format)\n\n    Transforms.unwrapNodes(editor, {\n        match: n => LIST_TYPES.includes(n.type),\n        split: true,\n    })\n\n    Transforms.setNodes(editor, {\n        type: isActive ? 'paragraph' : isList ? 'list-item' : format,\n    })\n\n    if (!isActive && isList) {\n        const block = { type: format, children: [] }\n        Transforms.wrapNodes(editor, block)\n    }\n}\n\nconst toggleMark = (editor, format) => {\n    const isActive = isMarkActive(editor, format)\n\n    if (isActive) {\n        Editor.removeMark(editor, format)\n    } else {\n        Editor.addMark(editor, format, true)\n    }\n}\n\nconst isBlockActive = (editor, format) => {\n    const [match] = Editor.nodes(editor, {\n        match: n => n.type === format,\n    })\n\n    return !!match\n}\n\nconst isMarkActive = (editor, format) => {\n    const marks = Editor.marks(editor)\n    return marks ? marks[format] === true : false\n}\n\nexport {\n    toggleBlock,\n    toggleMark,\n    isBlockActive,\n    isMarkActive,\n}"],"file":"util.js"}